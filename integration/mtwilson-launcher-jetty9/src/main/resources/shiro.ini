# shiro configuration
# XXX TODO replace the examples below with configuration for our custom
# realms, etc.
# Reference: https://shiro.apache.org/authentication.html

[main]
# setting ssl.enabled to false disables the "ssl required" filter
ssl.enabled = false
ssl.port = 8443

# optional: custom authentication strategy
# authenticator = com.foo.bar.CustomAuthenticator
# securityManager.authenticator = $authenticator

# built-in authentication strategy
authcStrategy = org.apache.shiro.authc.pam.FirstSuccessfulStrategy
securityManager.authenticator.authenticationStrategy = $authcStrategy

# available realms
#x509_realm = com.intel.mtwilson.shiro.X509Realm
#hmac_realm = com.intel.mtwilson.shiro.HmacRealm
#password_realm = com.intel.mtwilson.shiro.JdbcPasswordRealm
#securityManager.realms = $x509_realm, $hmac_realm, $password_realm
#jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm=com.intel.mtwilson.shiro.JdbcPasswordRealm
jdbcRealm.permissionsLookupEnabled=true
jdbcRealm.authenticationQuery=select password from mw_user_password where username=?
#jdbcRealm.saltedAuthenticationQuery=select password, password_salt from mw_user_password where username=?
jdbcRealm.userRolesQuery=select id from mw_user where username=?
jdbcRealm.permissionsQuery=select permission from mw_user_permission where user_id=?
### the iniRealm = org.apache.shiro.realm.text.IniRealm  is automatically configured when we have [users] and [roles] below
securityManager.realms = $jdbcRealm, $iniRealm

# TODO  salt should be 8 bytes long minimum recommended in PKCS5 standard
# sha256Matcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
# ###  hexencoded false means we're storing base64
# sha256Matcher.storedCredentialsHexEncoded = false
# sha256Matcher.hashIterations = 10000
# iniRealm.credentialsMatcher = $sha256Matcher
# iniRealm.credentialsMatcher

shiro.loginUrl = /static/login.html
authc.successUrl = /static/index.html

# each user has required password value followed by optional assigned roles
[users]
root = root, root
admin = password, attestation, hostmanager, whitelistmanager, securitymanager, assetmanager
guest = guest
testuser1 = password, test
testuser2 = password, test2

# each role has optional assigned permissions
[roles]
root = *
hostmanager = host:*:*
whitelistmanager = software_measurement:*:*, host_trustpolicy:*:*
securitymanager = user:*:*, user_role:*:*, role:*:*, role_permission:*:*, user_password:*:*
assetmanager = tag:*:*
attestation = host_attestation:read:*, host_trustpolicy:read:*
test2 = test:hello:*

# define security by url matching, the first match wins so order is important
[urls]
/v1/* = ssl
/v2/* = ssl
/static/* = anon

# Reference: http://shiro.apache.org/webapp-tutorial.html
/static/login.html = authc
/static/logout.html = logout
