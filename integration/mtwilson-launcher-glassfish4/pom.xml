<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>mtwilson-launcher-glassfish4</artifactId>
    <packaging>war</packaging>
    <name>mtwilson-launcher-glassfish4</name>

    <parent>
        <groupId>com.intel.mtwilson.integration</groupId>
        <artifactId>mtwilson-integration</artifactId>
        <version>1.2.3-SNAPSHOT</version>
    </parent>
    
    <properties />

    <build>
	
        <plugins>
		    
	    <plugin>
		<artifactId>maven-war-plugin</artifactId>
		<version>2.4</version>
		<configuration>
		    <archiveClasses>true</archiveClasses>
		    <attachClasses>true</attachClasses>
		</configuration>
	    </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <inherited>true</inherited>
                <version>2.3.2</version>     
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <skip>false</skip>
                </configuration>
            </plugin>


        </plugins>
    </build>
    <dependencies>

        <dependency>
            <groupId>com.intel.mtwilson.integration</groupId>
            <artifactId>mtwilson-launcher-jersey2</artifactId>
            <version>${project.version}</version>
        </dependency>

        
        <!-- for jersey 2.x deployment on glassfish4, we have to exclude the jersey jars because glassfish 4 already has them and will throw this error 
		if they are included in the war file:
org.glassfish.deployment.common.DeploymentException: CDI deployment failure:WELD-001408 Unsatisfied dependencies for type [IterableProvider<InjectionResolver<Object>>] with qualifiers [@Default] at injection point [[BackedAnnotatedParameter] Parameter 2 of [BackedAnnotatedConstructor] @Inject org.glassfish.jersey.internal.inject.JerseyClassAnalyzer(@Named ClassAnalyzer, IterableProvider<InjectionResolver<Object>>)]
        at org.glassfish.weld.WeldDeployer.event(WeldDeployer.java:225)
        at org.glassfish.kernel.event.EventsImpl.send(EventsImpl.java:131)
        at org.glassfish.internal.data.ApplicationInfo.load(ApplicationInfo.java:328)
        at com.sun.enterprise.v3.server.ApplicationLifecycle.deploy(ApplicationLifecycle.java:493)
        at com.sun.enterprise.v3.server.ApplicationLifecycle.deploy(ApplicationLifecycle.java:219)
		
		-->
        <!-- XXX TODO  probably need to separate poms:  1 for war file to deploy onto glassfish 4, w/o jersey jars, and 1 for deploying on jetty/tomcat, with jersey jars included -->
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
        </dependency>        
	<dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-common</artifactId>
            <scope>provided</scope>
        </dependency>
<dependency>
    <groupId>org.glassfish.jersey.media</groupId>
    <artifactId>jersey-media-multipart</artifactId>
            <scope>provided</scope>
</dependency>
        
    </dependencies>
    
</project>
